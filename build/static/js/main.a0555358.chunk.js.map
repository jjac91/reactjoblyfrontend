{"version":3,"sources":["CountContext.js","Home.js","api.js","CompanyCard.js","SearchForm.js","Companies.js","JobCard.js","Company.js","Jobs.js","SignUpForm.js","Signup.js","LoginForm.js","Login.js","ProfileForm.js","Profile.js","ProtectedRoute.js","Routes.js","NavBar.js","hooks.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","Home","currentUser","useContext","react_default","a","createElement","className","username","react_router_dom","exact","to","JoblyApi","endpoint","data","method","console","debug","url","process","headers","Authorization","concat","token","params","axios","error","_context","t0","response","message","Array","isArray","handle","this","request","res","company","companies","term","name","jobs","user","userData","jobID","CompanyCard","_ref","logoUrl","src","alt","description","SearchForm","getTerm","_useState","useState","searchTerm","_useState2","Object","slicedToArray","formData","setFormData","onSubmit","event","preventDefault","id","type","value","onChange","_event$target","target","objectSpread","defineProperty","Company","setCompanies","_useState3","_useState4","setSearchTerm","useEffect","_getCompanies","asyncToGenerator","Companies_regeneratorRuntime","mark","_callee","_companies","_companies2","wrap","prev","next","getCompanies","sent","filterCompany","log","stop","apply","arguments","src_SearchForm","length","map","src_CompanyCard","key","JobCard","job","applied","setApplied","_useContext","checkApplied","applyToJob","_handleApply","JobCard_regeneratorRuntime","e","abrupt","title","salary","Number","equity","companyName","onClick","_x","disabled","cantFind","setCompany","setJobs","useParams","_getCompany","Company_regeneratorRuntime","_company","getCompany","keys","includes","react_router","numEmployees","src_JobCard","Jobs","_getJobs","Jobs_regeneratorRuntime","getAllJobs","getJobs","SignupForm","registerUser","history","useHistory","password","firstName","lastName","email","errors","setErrors","handleChange","handleSubmit","_ref2","SignUpForm_regeneratorRuntime","push","htmlFor","Signup","SignUpForm","LoginForm","loginUser","LoginForm_regeneratorRuntime","Login","src_LoginForm","ProfileForm","setCurrentUser","ProfileForm_regeneratorRuntime","updatedInfo","updatedUser","updateUser","Profile","src_ProfileForm","ProtectedRoute","props","esm_extends","Routes","path","src_Home","src_ProtectedRoute","component","Companies","src_Login","src_Signup","NavBar","logOutUser","logOut","useLocalStorage","defaultValue","undefined","saved","window","localStorage","getItem","JSON","parse","setValue","rawValue","stringify","setItem","App","_useLocalStorage","_useLocalStorage2","setToken","applicationIds","setApplicationIds","_registerUser","App_regeneratorRuntime","_callee2","_context2","_loginUser","_callee3","loginInfo","_context3","_getCurrentUser","_jwt$decode","_currentUser","jwt","decode","getUser","toConsumableArray","applications","getCurrentUser","CountContext","Provider","src_NavBar","src_Routes","_x2","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0555358.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport default UserContext;","import React, { useContext } from \"react\";\r\nimport UserContext from \"./CountContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n  const spacedOr = \"  or \"\r\n  const { currentUser } = useContext(UserContext);\r\n  const CheckUser = () => {\r\n    if (currentUser) {\r\n      return (\r\n        <div className=\"home\">\r\n          <h1>Welcome {currentUser.username}</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"home\">\r\n          <h1>\r\n          <Link exact to=\"/login\">\r\n            Login\r\n          </Link>\r\n            {spacedOr}\r\n          <Link exact to=\"/signup\">\r\n            Signup\r\n          </Link>\r\n          </h1>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return <CheckUser />;\r\n}\r\nexport default Home;\r\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  /** Get all companies. */\n\n  static async getCompanies() {\n    let res = await this.request(`companies/`);\n    return res.companies;\n  }\n  /** search companies */\n  static async filterCompany(term) {\n    let res = await this.request(`companies/`, { name: term });\n    return res.companies;\n  }\n\n  /** get all jobs */\n  static async getAllJobs() {\n    let res = await this.request(\"jobs\");\n    return res.jobs;\n  }\n\n  /** get all jobs for a company */\n  static async getAllCompanyJobs(handle) {\n    let res = await this.request(\"jobs\");\n    return res.jobs;\n  }\n\n  /** register a user */\n  static async registerUser(user) {\n    let res = await this.request(\"auth/register\", user, \"post\");\n    return res.token;\n  }\n\n  /** login a user */\n  static async loginUser(user) {\n    let res = await this.request(\"auth/token\", user, \"post\");\n    return res.token;\n  }\n\n  /**get user info */\n  static async getUser(user) {\n    let res = await this.request(`users/${user}`);\n    return res.user;\n  }\n  /**update user info */\n  static async updateUser(username, userData) {\n    let res = await this.request(`users/${username}`, userData, \"patch\");\n    return res.user;\n  }\n  static async applyToJob(username, jobID) {\n    await this.request(`users/${username}/jobs/${jobID}`, {}, \"post\");\n  }\n}\n\n/* // for now, put token (\"testuser\" / \"password\" on class)\nJoblyApi.token =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n  \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n  \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\"; */\n\nexport default JoblyApi;\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./CompanyCard.css\";\r\n\r\nfunction CompanyCard({ company, logoUrl }) {\r\n  return (\r\n    <NavLink to={`/companies/${company.handle}`}>\r\n      <div className=\"card\">\r\n        <h6>\r\n          {company.name} <img src={logoUrl} alt={company.name} />\r\n        </h6>\r\n        <p>{company.description}</p>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport default CompanyCard;\r\n","import React, { useState } from \"react\";\r\n\r\nconst SearchForm = ({ getTerm }) => {\r\n  const firstState = { searchTerm: \"Enter search term\"};\r\n  const [formData, setFormData] = useState(firstState);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((formData) => ({\r\n      ...formData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    getTerm(formData.searchTerm)\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        id=\"searchTerm\"\r\n        type=\"text\"\r\n        name=\"searchTerm\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n      />\r\n      <button id=\"searchButton\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport JoblyApi from \"./api\";\r\nimport CompanyCard from \"./CompanyCard\";\r\nimport SearchForm from \"./SearchForm\";\r\nfunction Company() {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getCompanies() {\r\n      if (searchTerm == null) {\r\n        let companies = await JoblyApi.getCompanies();\r\n        setCompanies(companies);\r\n      } else {\r\n        let companies = await JoblyApi.filterCompany(searchTerm);\r\n        console.log(companies);\r\n        setCompanies(companies);\r\n      }\r\n    }\r\n    getCompanies();\r\n  }, [searchTerm]);\r\n  const getTerm = (term) => setSearchTerm(term);\r\n  const CheckNoResults =() => {\r\n    if (companies.length === 0) {\r\n      return( <p>No results found!</p>)\r\n    } else {\r\n      return (companies.map((company) => (\r\n        <CompanyCard company={company} key={company.handle} />\r\n      )));\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <SearchForm getTerm={getTerm} />\r\n      <CheckNoResults />\r\n    </div>\r\n  );\r\n}\r\nexport default Company;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./CompanyCard.css\";\r\nimport UserContext from \"./CountContext\";\r\n\r\nfunction JobCard({ job }) {\r\n  let id = job.id;\r\n  const [applied, setApplied] = useState();\r\n  const { checkApplied, applyToJob } = useContext(UserContext);\r\n\r\n  useEffect(\r\n    function updateApplicationStatus() {\r\n      setApplied(checkApplied(id));\r\n    },\r\n    [id, applied]\r\n  );\r\n\r\n  async function handleApply(e) {\r\n    if (checkApplied(id)) return;\r\n    applyToJob(id);\r\n    setApplied(true);\r\n  }\r\n  const CheckEquity = () => {\r\n    if (!job.equity || Number(job.equity) === 0) {\r\n      return \"No Equity\";\r\n    } else {\r\n      return `${job.equity}`;\r\n    }\r\n  };\r\n  const CheckSalary = () => {\r\n    if (!job.salary || Number(job.salary) === 0) {\r\n      return \"No Salary\";\r\n    } else {\r\n      return `${job.salary}`;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"card\">\r\n      <h6>{job.title} </h6>\r\n      <ul>\r\n        <li>\r\n          <CheckSalary />\r\n        </li>\r\n        <li>\r\n          <CheckEquity />\r\n        </li>\r\n        <li>{job.companyName}</li>\r\n        <button onClick={handleApply} disabled={applied}>\r\n          {applied ? \"Applied\" : \"Apply\"}\r\n        </button>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport JoblyApi from \"./api\";\r\nimport JobCard from \"./JobCard\";\r\n\r\nfunction Company(cantFind) {\r\n  const [company, setCompany] = useState({});\r\n  const [jobs, setJobs] = useState([]);\r\n  const { handle } = useParams();\r\n\r\n  useEffect(() => {\r\n    async function getCompany() {\r\n      try {\r\n        let company = await JoblyApi.getCompany(handle);\r\n        console.log(company.jobs);\r\n        setCompany(company);\r\n        setJobs(company.jobs);\r\n      } catch (error) {\r\n        setCompany(error);\r\n      }\r\n    }\r\n    getCompany();\r\n  }, []);\r\n  console.log(company);\r\n  console.log();\r\n  if (Object.keys(company).includes(\"0\")) return <Redirect to={cantFind} />;\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>{company.name}</h1>\r\n        <h3>Employees:{company.numEmployees}</h3>\r\n        <img src={company.logoUrl} alt={company.name} />\r\n        <p>{company.description}</p>\r\n      </div>\r\n      <div>\r\n        {jobs.map((job) => (\r\n          <JobCard job={job} key={job.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Company;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport JobCard from \"./JobCard\";\r\nimport JoblyApi from \"./api\";\r\n\r\nfunction Jobs() {\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getJobs() {\r\n      let jobs = await JoblyApi.getAllJobs();\r\n      console.log(jobs)\r\n      setJobs(jobs);\r\n    }\r\n    getJobs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {jobs.map((job) => (\r\n        <JobCard job={job} key={job.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Jobs;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SignupForm = ({ registerUser }) => {\r\n  const history = useHistory();\r\n  const firstState = {\r\n    username: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n  };\r\n  const [formData, setFormData] = useState(firstState);\r\n  const [errors, setErrors] =useState([])\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((formData) => ({\r\n      ...formData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try{\r\n     await registerUser(formData);\r\n     history.push(\"/\");\r\n    }\r\n    catch(err){\r\n      setErrors(err)\r\n    }\r\n    \r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <ul>\r\n        <li>\r\n          <label htmlFor=\"username\">User Name:</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"text\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            id=\"firstName\"\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            value={formData.firstName}\r\n            onChange={handleChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            id=\"lastName\"\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            value={formData.lastName}\r\n            onChange={handleChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          <button id=\"signupButton\">Submit</button>\r\n        </li>\r\n        {errors}\r\n      </ul>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"./SignUpForm\";\r\n\r\nfunction Signup({registerUser}) {\r\n  return <SignupForm registerUser={registerUser}/>;\r\n}\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoginForm = ({ loginUser }) => {\r\n  const history = useHistory();\r\n  const firstState = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n  const [formData, setFormData] = useState(firstState);\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((formData) => ({\r\n      ...formData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try{\r\n      await loginUser(formData);\r\n      history.push(\"/\");\r\n     }\r\n     catch(err){\r\n       setErrors(err)\r\n     }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <ul>\r\n        <li>\r\n          <label htmlFor=\"username\">User Name:</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"text\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          <button id=\"loginButton\">Submit</button>\r\n        </li>\r\n        {errors}\r\n      </ul>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\"\r\nimport LoginForm from \"./LoginForm\"\r\nfunction Login({loginUser}){\r\n    return(\r\n    <LoginForm loginUser={loginUser}/>\r\n    )\r\n}\r\nexport default Login","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport JoblyApi from \"./api\";\r\n\r\nimport UserContext from \"./CountContext\";\r\n\r\nconst ProfileForm = () => {\r\n  const { currentUser, setCurrentUser } = useContext(UserContext);\r\n  const [formData, setFormData] = useState({\r\n    firstName: currentUser.firstName,\r\n    lastName: currentUser.lastName,\r\n    email: currentUser.email,\r\n    username: currentUser.username,\r\n  });\r\n  const [errors, setErrors] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((formData) => ({\r\n      ...formData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let updatedInfo = {\r\n      firstName: formData.firstName,\r\n      lastName: formData.lastName,\r\n      email: formData.email,\r\n      password: formData.password,\r\n    };\r\n    let username = formData.username;\r\n    let updatedUser;\r\n    try {\r\n      updatedUser = await JoblyApi.updateUser(username, updatedInfo);\r\n    } catch (err) {\r\n      setErrors(err);\r\n      return;\r\n    }\r\n    setErrors([]);\r\n    setCurrentUser(updatedUser);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <ul>\r\n        <li>\r\n          <label htmlFor=\"username\">User Name:</label>\r\n          {currentUser.username}\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            id=\"firstName\"\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            value={formData.firstName}\r\n            onChange={handleChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            id=\"lastName\"\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            value={formData.lastName}\r\n            onChange={handleChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          <button id=\"updateButton\">Update</button>\r\n        </li>\r\n        {errors}\r\n      </ul>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProfileForm;\r\n","import React from \"react\";\r\nimport ProfileForm from \"./ProfileForm\";\r\n\r\nfunction Profile() {\r\n  return <ProfileForm />;\r\n}\r\nexport default Profile;\r\n","import React, { useContext } from \"react\";\r\nimport UserContext from \"./CountContext\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nfunction ProtectedRoute({ ...props }) {\r\n  const {currentUser} = useContext(UserContext);\r\n  return currentUser? <Route {...props}/> : <Redirect to=\"/login\" />;\r\n}\r\n\r\nexport default ProtectedRoute","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Companies from \"./Companies\";\r\nimport Company from \"./Company\";\r\nimport Jobs from \"./Jobs\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport Profile from \"./Profile\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\n\r\nfunction Routes({ registerUser, loginUser }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n      <ProtectedRoute exact path=\"/companies\" component={Companies} />\r\n      <ProtectedRoute\r\n        path=\"/companies/:handle\"\r\n        component={Company}\r\n        cantFind={\"/\"}\r\n      />\r\n      <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\r\n      <ProtectedRoute exact path=\"/profile\" component={Profile} />\r\n      <Route exact path=\"/login\">\r\n        <Login loginUser={loginUser} />\r\n      </Route>\r\n      <Route exact path=\"/signup\">\r\n        <Signup registerUser={registerUser} />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\nimport UserContext from \"./CountContext\";\r\nfunction NavBar({ logOutUser }) {\r\n  const history = useHistory();\r\n  function logOut() {\r\n    logOutUser();\r\n    history.push(\"/\");\r\n  }\r\n  const {currentUser} = useContext(UserContext);\r\n  console.log(currentUser)\r\n  const CheckUser = () => {\r\n    if (currentUser) {\r\n      return (\r\n        <div className=\"nav\">\r\n          <NavLink exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink exact to=\"/companies\">\r\n            Companies\r\n          </NavLink>\r\n          <NavLink exact to=\"/jobs\">\r\n            Jobs\r\n          </NavLink>\r\n          <NavLink exact to=\"/profile\">\r\n            Profile\r\n          </NavLink>\r\n          <NavLink exact to=\"/logout\" onClick={logOut}>\r\n            Logout {currentUser.username}\r\n          </NavLink>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"nav\">\r\n          <NavLink exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink exact to=\"/login\">\r\n            Login\r\n          </NavLink>\r\n          <NavLink exact to=\"/signup\">\r\n            Signup\r\n          </NavLink>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return <CheckUser />;\r\n}\r\nexport default NavBar;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useLocalStorage = (key, defaultValue = null) => {\r\n  const [value, setValue] = useState(() => {\r\n    try {\r\n      const saved = window.localStorage.getItem(key);\r\n      if (saved !== null) {\r\n        return JSON.parse(saved);\r\n      }\r\n      return defaultValue;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return defaultValue;\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    const rawValue = JSON.stringify(value);\r\n    localStorage.setItem(key, rawValue);\r\n  }, [value, key]);\r\n\r\n  return [value, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport NavBar from \"./NavBar\";\nimport UserContext from \"./CountContext\";\nimport JoblyApi from \"./api\";\nimport useLocalStorage from \"./hooks\";\nimport jwt from \"jsonwebtoken\";\n\nfunction App() {\n  const [token, setToken] = useLocalStorage(\"token\");\n  const [currentUser, setCurrentUser] = useState(null);\n  const [applicationIds, setApplicationIds] = useState([]);\n\n  useEffect(() => {\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwt.decode(token);\n          JoblyApi.token = token;\n          let currentUser = await JoblyApi.getUser(username);\n          setCurrentUser(currentUser);\n          setApplicationIds([...currentUser.applications]);\n        } catch (error) {\n          console.error(error);\n          setCurrentUser(null);\n        }\n      }\n    }\n    getCurrentUser();\n  }, [token]);\n\n  async function registerUser(user) {\n    let token = await JoblyApi.registerUser(user);\n    setToken(token);\n    setCurrentUser({ username: user.username });\n  }\n\n  async function loginUser(loginInfo) {\n    let token = await JoblyApi.loginUser(loginInfo);\n    setToken(token);\n    setCurrentUser({ username: loginInfo.username });\n  }\n\n  function logOutUser() {\n    setToken(null);\n    setCurrentUser(null);\n  }\n\n  function checkApplied(id) {\n    return applicationIds.includes(id);\n  }\n\n  function applyToJob(id) {\n    if (checkApplied(id)) return;\n    JoblyApi.applyToJob(currentUser.username, id);\n    setApplicationIds([...applicationIds, id]);\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <UserContext.Provider\n          value={{ currentUser, setCurrentUser, applyToJob, checkApplied }}\n        >\n          <NavBar logOutUser={logOutUser} />\n          <Routes registerUser={registerUser} loginUser={loginUser} />\n        </UserContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}